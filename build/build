#!/bin/bash

# Copyright (c) 2019 FEROX YT EIRL, www.ferox.yt <devops@ferox.yt>
# Copyright (c) 2019 Jérémy WALTHER <jeremy.walther@golflima.net>
# See <https://github.com/frxyt/docker-php-dev> for details.

set -ex

# Get PHP version
FRX_PHP_VERSION=$(php -v | grep ^PHP | cut -d' ' -f2)

# Install required packages
DEBIAN_FRONTEND=noninteractive apt-get update
DEBIAN_FRONTEND=noninteractive apt-get install -y --fix-missing --no-install-recommends \
    apt-utils \
    curl \
    git \
    gnupg \
    libzip-dev \
    lynx \
    nano \
    rsync \
    sshpass \
    subversion \
    unzip \
    vim

# Install Xdebug
if [[ "${FRX_PHP_VERSION}" =~ ^7.4 ]]; then
    pecl install xdebug-beta
elif [[ "${FRX_PHP_VERSION}" =~ ^5.6 ]]; then
    pecl install xdebug-2.5.5
else
    pecl install xdebug
fi
docker-php-ext-enable xdebug
cat > /usr/local/etc/php/conf.d/zz-frx-xdebug.ini <<'EOL'
xdebug.max_nesting_level    = ${FRX_PHP_XDEBUG_MAX_NESTING_LEVEL}
xdebug.remote_autostart     = ${FRX_PHP_XDEBUG_REMOTE_AUTOSTART}
xdebug.remote_connect_back  = ${FRX_PHP_XDEBUG_REMOTE_CONNECT_BACK}
xdebug.remote_enable        = ${FRX_PHP_XDEBUG_REMOTE_ENABLE}
xdebug.remote_host          = ${FRX_PHP_XDEBUG_REMOTE_HOST}
xdebug.remote_port          = ${FRX_PHP_XDEBUG_REMOTE_PORT}
EOL

# Install XHProf
if [[ "${FRX_PHP_VERSION}" =~ ^7. ]]; then
    curl -sSL https://github.com/tideways/php-xhprof-extension/releases/download/v5.0.2/tideways-xhprof_5.0.2_amd64.deb -o tideways-xhprof_amd64.deb
    dpkg -i tideways-xhprof_amd64.deb
    apt-get install -f
    rm -f tideways-xhprof_amd64.deb
    echo "extension=/usr/lib/tideways_xhprof/tideways_xhprof-${FRX_PHP_VERSION:0:3}.so" > /usr/local/etc/php/conf.d/zz-frx-tideways-xhprof.ini
    cat >> /usr/local/etc/php/conf.d/zz-frx-tideways-xhprof.ini <<'EOL'
tideways_xhprof.clock_use_rdtsc=${FRX_PHP_TIDEWAYS_XHPROF_CLOCK_USE_RDTSC}
EOL
else
    pecl install xhprof-beta
    docker-php-ext-enable xhprof
fi

# Install Composer
curl -sS https://getcomposer.org/installer | php
mv composer.phar /usr/local/bin/composer
docker-php-ext-configure zip --with-zlib-dir
docker-php-ext-install -j$(nproc) zip
composer self-update

# Install PHP CS Fixer
curl -sSL https://cs.symfony.com/download/php-cs-fixer-v2.phar -o php-cs-fixer
chmod a+x php-cs-fixer
mv php-cs-fixer /usr/local/bin/php-cs-fixer

# Install Node.js & Yarn
curl -sL https://deb.nodesource.com/setup_10.x | bash -
curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
echo "deb https://dl.yarnpkg.com/debian/ stable main" > /etc/apt/sources.list.d/yarn.list
DEBIAN_FRONTEND=noninteractive apt-get update
DEBIAN_FRONTEND=noninteractive apt-get install -y --fix-missing --no-install-recommends \
    nodejs \
    yarn

# Enable some configuration for Apache with environment variables
if [ -f /etc/apache2/sites-enabled/000-default.conf -a -f /etc/apache2/envvars ]; then
    sed -e 's/^\s*\(DocumentRoot\)\s*.*$/\1 ${FRX_APACHE_DOCUMENT_ROOT}/' -i /etc/apache2/sites-enabled/000-default.conf
    echo -n ': ${FRX_APACHE_DOCUMENT_ROOT:=/var/www/html}\nexport FRX_APACHE_DOCUMENT_ROOT' >> /etc/apache2/envvars
fi

# Change default entrypoint
mv /usr/local/bin/docker-php-entrypoint /usr/local/bin/docker-php-entrypoint-official
ln -s /frx/start /usr/local/bin/docker-php-entrypoint

# Clean APT cache
apt-get clean -y && apt-get clean -y && apt-get autoclean -y && rm -r /var/lib/apt/lists/*
rm -rf /frx/php*

# Display versions
cat /etc/debian_version
php -v
php -m
composer -V
php-cs-fixer -V
node -v
npm -v
yarn --version
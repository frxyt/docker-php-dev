#!/bin/bash

# Copyright (c) 2019-2020 FEROX YT EIRL, www.ferox.yt <devops@ferox.yt>
# Copyright (c) 2019-2020 Jérémy WALTHER <jeremy.walther@golflima.net>
# See <https://github.com/frxyt/docker-php-dev> for details.

set -ex

# Get PHP version
FRX_PHP_VERSION=$(php -v | grep ^PHP | cut -d' ' -f2)

# Install required packages
DEBIAN_FRONTEND=noninteractive apt-get update
DEBIAN_FRONTEND=noninteractive apt-get install -y --fix-missing --no-install-recommends \
    apt-utils \
    curl \
    git \
    gnupg \
    libzip-dev \
    lynx \
    nano \
    rsync \
    sshpass \
    subversion \
    unzip \
    vim

# Install Xdebug
if [[ "${FRX_PHP_VERSION}" =~ ^8. ]]; then
    pecl install xdebug
elif [[ "${FRX_PHP_VERSION}" =~ ^7.[1234] ]]; then
    pecl install xdebug-2.9.8
elif [[ "${FRX_PHP_VERSION}" =~ ^7.0 ]]; then
    pecl install xdebug-2.7.2
elif [[ "${FRX_PHP_VERSION}" =~ ^5.6 ]]; then
    pecl install xdebug-2.5.5
fi
docker-php-ext-enable xdebug
if [[ "${FRX_PHP_VERSION}" =~ ^8. ]]; then
    cat > /usr/local/etc/php/conf.d/zz-frx-xdebug.ini <<'EOL'
xdebug.client_host          = ${FRX_PHP_XDEBUG_CLIENT_HOST}
xdebug.client_port          = ${FRX_PHP_XDEBUG_CLIENT_PORT}
xdebug.discover_client_host = ${FRX_PHP_XDEBUG_DISCOVER_CLIENT_HOST}
xdebug.max_nesting_level    = ${FRX_PHP_XDEBUG_MAX_NESTING_LEVEL}
xdebug.mode                 = ${FRX_PHP_XDEBUG_MODE}
xdebug.start_with_request   = ${FRX_PHP_XDEBUG_START_WITH_REQUEST}
EOL
else
    cat > /usr/local/etc/php/conf.d/zz-frx-xdebug.ini <<'EOL'
xdebug.max_nesting_level    = ${FRX_PHP_XDEBUG_MAX_NESTING_LEVEL}
xdebug.remote_autostart     = ${FRX_PHP_XDEBUG_REMOTE_AUTOSTART}
xdebug.remote_connect_back  = ${FRX_PHP_XDEBUG_REMOTE_CONNECT_BACK}
xdebug.remote_enable        = ${FRX_PHP_XDEBUG_REMOTE_ENABLE}
xdebug.remote_host          = ${FRX_PHP_XDEBUG_REMOTE_HOST}
xdebug.remote_port          = ${FRX_PHP_XDEBUG_REMOTE_PORT}
EOL
fi

# Install XHProf
if [[ "$(uname -m)" = 'x86_64' ]]; then
    if [[ "${FRX_PHP_VERSION}" =~ ^7. ]]; then
        curl -sSL https://github.com/tideways/php-xhprof-extension/releases/download/v5.0.2/tideways-xhprof_5.0.2_amd64.deb -o tideways-xhprof_amd64.deb
        dpkg -i tideways-xhprof_amd64.deb
        apt-get install -f
        rm -f tideways-xhprof_amd64.deb
        echo "extension=/usr/lib/tideways_xhprof/tideways_xhprof-${FRX_PHP_VERSION:0:3}.so" > /usr/local/etc/php/conf.d/zz-frx-tideways-xhprof.ini
        cat >> /usr/local/etc/php/conf.d/zz-frx-tideways-xhprof.ini <<'EOL'
tideways_xhprof.clock_use_rdtsc=${FRX_PHP_TIDEWAYS_XHPROF_CLOCK_USE_RDTSC}
EOL
    elif [[ "${FRX_PHP_VERSION}" =~ ^5.6 ]]; then
        pecl install xhprof-0.9.4
        docker-php-ext-enable xhprof
    fi
fi

# Enable logs for php-fpm
if [[ "${FRX_DOCKER_FROM}" =~ -fpm$ ]]; then
    cat >> /usr/local/etc/php-fpm.d/www-log.conf <<'EOL'
php_admin_value[error_log] = /var/log/fpm-php.www.log
php_admin_flag[log_errors] = on
EOL
fi

# Install Composer
curl -sS https://getcomposer.org/installer | php
mv composer.phar /usr/local/bin/composer
if [[ ! "${FRX_PHP_VERSION}" =~ ^(7.4)|(8.) ]]; then
    docker-php-ext-configure zip --with-zlib-dir
fi
docker-php-ext-install -j$(nproc) zip
composer self-update

# Install PHPCPD
if [[ "${FRX_PHP_VERSION}" =~ ^(7.[34])|(8.) ]]; then
    curl -sSL https://phar.phpunit.de/phpcpd.phar -o /usr/local/bin/phpcpd
    chmod a+x /usr/local/bin/phpcpd
fi

# Install PHP CS Fixer
curl -sSL https://cs.symfony.com/download/php-cs-fixer-v2.phar -o /usr/local/bin/php-cs-fixer
chmod a+x /usr/local/bin/php-cs-fixer

# Install PHP_Depend
curl -sSL https://github.com/pdepend/pdepend/releases/download/2.10.0/pdepend.phar -o /usr/local/bin/pdepend
chmod a+x /usr/local/bin/pdepend

# Install PHPMD
curl -sSL https://github.com/phpmd/phpmd/releases/latest/download/phpmd.phar -o /usr/local/bin/phpmd
chmod a+x /usr/local/bin/phpmd

# Install PhpMetrics
if [[ "${FRX_PHP_VERSION}" =~ ^5.6 ]]; then
    curl -sSL https://github.com/phpmetrics/PhpMetrics/releases/download/v2.3.2/phpmetrics.phar -o /usr/local/bin/phpmetrics
else
    curl -sSL https://github.com/phpmetrics/PhpMetrics/releases/latest/download/phpmetrics.phar -o /usr/local/bin/phpmetrics
fi
chmod a+x /usr/local/bin/phpmetrics

# Install PHPStan
if [[ "${FRX_PHP_VERSION}" =~ ^(7.[1234])|(8.) ]]; then
    curl -sSL https://github.com/phpstan/phpstan/releases/latest/download/phpstan.phar -o /usr/local/bin/phpstan
    chmod a+x /usr/local/bin/phpstan
fi

# Install PHPUnit
if [[ "${FRX_PHP_VERSION}" =~ ^5.6 ]]; then
    curl -sSL https://phar.phpunit.de/phpunit-5.phar -o /usr/local/bin/phpunit-5
    chmod a+x /usr/local/bin/phpunit-5
fi
if [[ "${FRX_PHP_VERSION}" =~ ^7. ]]; then
    curl -sSL https://phar.phpunit.de/phpunit-6.phar -o /usr/local/bin/phpunit-6
    chmod a+x /usr/local/bin/phpunit-6
fi
if [[ "${FRX_PHP_VERSION}" =~ ^7.[1234] ]]; then
    curl -sSL https://phar.phpunit.de/phpunit-7.phar -o /usr/local/bin/phpunit-7
    chmod a+x /usr/local/bin/phpunit-7
fi
if [[ "${FRX_PHP_VERSION}" =~ ^7.([234])|(8.) ]]; then
    curl -sSL https://phar.phpunit.de/phpunit-8.phar -o /usr/local/bin/phpunit-8
    chmod a+x /usr/local/bin/phpunit-8
fi
if [[ "${FRX_PHP_VERSION}" =~ ^7.([34])|(8.) ]]; then
    curl -sSL https://phar.phpunit.de/phpunit-9.phar -o /usr/local/bin/phpunit-9
    chmod a+x /usr/local/bin/phpunit-9
fi
cp $(ls -r1 --color=never /usr/local/bin/phpunit* | head -1) /usr/local/bin/phpunit

# Install Node.js & Yarn
curl -sL https://deb.nodesource.com/setup_16.x | bash -
curl -sSL https://dl.yarnpkg.com/debian/pubkey.gpg | gpg --dearmor | tee /usr/share/keyrings/yarnkey.gpg >/dev/null
echo "deb https://dl.yarnpkg.com/debian/ stable main" > /etc/apt/sources.list.d/yarn.list
DEBIAN_FRONTEND=noninteractive apt-get update
DEBIAN_FRONTEND=noninteractive apt-get install -y --fix-missing --no-install-recommends \
    nodejs \
    yarn

# Enable some configuration for Apache with environment variables
if [ -f /etc/apache2/sites-enabled/000-default.conf -a -f /etc/apache2/envvars ]; then
    sed -e 's/^\s*\(DocumentRoot\)\s*.*$/\1 ${FRX_APACHE_DOCUMENT_ROOT}/' -i /etc/apache2/sites-enabled/000-default.conf
    echo -n ': ${FRX_APACHE_DOCUMENT_ROOT:=/var/www/html}\nexport FRX_APACHE_DOCUMENT_ROOT' >> /etc/apache2/envvars
fi

# Change default entrypoint
mv /usr/local/bin/docker-php-entrypoint /usr/local/bin/docker-php-entrypoint-official
ln -s /frx/start /usr/local/bin/docker-php-entrypoint

# Clean APT cache
apt-get clean -y && apt-get clean -y && apt-get autoclean -y && rm -r /var/lib/apt/lists/*
rm -rf /frx/php*

# Display versions
cat /etc/debian_version
php -v
php -m
composer -V
pdepend --version
[[ "${FRX_PHP_VERSION}" =~ ^(7.[34])|(8.) ]] && phpcpd --version
[[ "${FRX_PHP_VERSION}" =~ ^(5.6)|(7.)|(8.) ]] && php-cs-fixer -V
phpmd --version
phpmetrics --version
[[ "${FRX_PHP_VERSION}" =~ ^(7.[1234])|(8.) ]] && phpstan --version
[[ "${FRX_PHP_VERSION}" =~ ^5.6 ]] && phpunit-5 --version
[[ "${FRX_PHP_VERSION}" =~ ^7. ]] && phpunit-6 --version
[[ "${FRX_PHP_VERSION}" =~ ^7.[1234] ]] && phpunit-7 --version
[[ "${FRX_PHP_VERSION}" =~ ^(7.[234])|(8.) ]] && phpunit-8 --version
[[ "${FRX_PHP_VERSION}" =~ ^(7.[34])|(8.) ]] && phpunit-9 --version
phpunit --version
node -v
npm -v
yarn --version